---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

import Author from '@components/Author.astro';
import Posts from '@components/Posts.astro';
import Base from '@layouts/Base.astro';
import { getAllAuthors, getAllPostsByAuthor } from '@lib/contentParser';
import dateFormat from '@lib/utils/dateFormat';

import { sortByDate } from '@lib/utils/sortFunctions';
import { humanize, slugify } from '@lib/utils/textConverter';
import { BiCalendarEdit, BiCategoryAlt } from 'react-icons/bi/index.js';

export async function getStaticPaths() {
  const authors = await getAllAuthors();

  const paths = authors.map(author => ({
    params: {
      author: author.slug,
    },
    props: { author },
  }));
  return paths;
}

interface Props {
  author: CollectionEntry<'authors'>;
}

const { author } = Astro.props;
const { title, meta_title, description, image } = author.data;

// Author Posts
const posts = await getAllPostsByAuthor(author);
const currentPosts = sortByDate(posts);
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <Author author={author} />

  {currentPosts.length > 0 && (
    <section>
      <div class="container">
        <h2 class="mb-8 text-center font-bold text-2xl md:text-3xl">Recent Posts</h2>
        <div class:list={['row gy-4', { 'justify-center': currentPosts.length < 3 }]} >
          <Posts posts={currentPosts} fluid={false} class="mb-16" />
        </div>
      </div>
    </section>
  )}
</Base>
