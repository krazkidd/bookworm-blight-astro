---
import { Image } from 'astro:assets';
import { type CollectionEntry } from 'astro:content';

import Tile from '@components/Tile.astro';

import config from '@config/config.json';
import { getAuthorsByPost } from '@lib/contentParser';
import dateFormat from '@lib/utils/dateFormat';
import { humanize, slugify } from '@lib/utils/textConverter';
import { BiCalendarEdit, BiCategoryAlt } from 'react-icons/bi/index.js';

interface Props {
  posts: CollectionEntry<'posts'>[];
  fluid?: boolean;
  hideMeta?: boolean;
  class?: string;
}

const { summary_length } = config.settings;
const { posts, fluid, hideMeta, class: className } = Astro.props;

const postAuthorsMap = new Map<CollectionEntry<'posts'>, CollectionEntry<'authors'>[]>();
for (const post of posts) {
  postAuthorsMap.set(post, await getAuthorsByPost(post));
}
---

<div class:list={['row g-2', className, { 'justify-center': posts.length === 1 }]}>
  {
    posts.map((post, i) => (
      <Tile
        image={post.data.image}
        title={post.data.title}
        body={post.body?.slice(0, Number(summary_length)) + '...'}
        url={`/posts/${post.slug}/`}
        class:list={['col-12', { 'sm:col-6 lg:col-3': !fluid || i > 0 }]}
      >
        {!hideMeta && (
          <ul slot="meta" class="m-2 flex flex-wrap gap-2 items-center">
            <li>
              {postAuthorsMap.get(post)!.map(author => (
                <a
                  href={`/authors/${author.slug}/`}
                  class="flex items-center hover:text-primary"
                >
                  {author.data.image && (
                    <Image
                      src={author.data.image}
                      alt={author.data.title}
                      height={50}
                      width={50}
                      class="mr-2 h-6 w-6 rounded-full"
                    />
                  )}
                  <span>{author.data.title}</span>
                </a>
              ))}
            </li>
            <li class="flex items-center gap-1">
              <BiCalendarEdit />
              {dateFormat(post.data.date)}
            </li>
            <li class="flex items-center gap-1">
              <BiCategoryAlt />
              <ul>
                {post.data.categories.map((category: string, i: number) => (
                  <li class="inline-block">
                    <a
                      href={`/categories/${slugify(category)}/`}
                      class="mr-2 hover:text-primary"
                    >
                      {humanize(category)}{i !== post.data.categories.length - 1 && ','}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          </ul>
        )}
      </Tile>
    ))
  }
</div>
