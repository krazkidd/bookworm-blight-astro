---
import { Image } from 'astro:assets';
import { getEntries, type CollectionEntry } from 'astro:content';

import Tile from '@components/Tile.astro';

import config from "@config/config.json";
import dateFormat from "@lib/utils/dateFormat";
import { humanize,slugify } from "@lib/utils/textConverter";
import { BiCalendarEdit,BiCategoryAlt } from "react-icons/bi/index.js";

interface Props {
  posts: CollectionEntry<"posts">[];
  fluid?: boolean;
  hideMeta?: boolean;
  class?: string;
}

const { summary_length } = config.settings;
const { posts, fluid, hideMeta, class: className } = Astro.props;

const postAuthorsMap = new Map<CollectionEntry<"posts">, CollectionEntry<"authors">[]>();
for (const post of posts) {
  postAuthorsMap.set(post, await getEntries(post.data.authors));
}
---
<div class:list={['row g-2', className, { 'justify-center': posts.length === 1 }]}>
  {
    posts.map((post: any, i: number) => (
      <Tile
        image={post.data.image}
        title={post.data.title}
        body={post.body && post.body?.slice(0, Number(i === 0 && fluid !== false ? summary_length * 2 : summary_length)) + '...'}
        url={`/posts/${post.slug}`}
        class:list={['col-12', { 'sm:col-6 lg:col-3': !fluid || i > 0 }]}
      >
        {!hideMeta && (
          <ul slot="meta" class="mt-2 mb-2 flex flex-wrap items-center text-text p-1">
            <li class="mr-5">
              {postAuthorsMap.get(post)!
                .map((author) => (
                  <a
                    href={`/authors/${author.slug}`}
                    class="flex items-center hover:text-primary font-medium"
                  >
                    {author.data.image && (
                      <Image
                        src={author.data.image}
                        alt={author.data.title}
                        height={50}
                        width={50}
                        class="mr-2 h-6 w-6 rounded-full"
                      />
                    )}
                    <span>{author.data.title}</span>
                  </a>
                ))}
            </li>
            <li class="mr-5 flex items-center flex-wrap font-medium">
              <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
              {dateFormat(post.data.date)}
            </li>
            <li class="mr-5 flex items-center flex-wrap">
              <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
              <ul>
                {post.data.categories.map((category: string, i: number) => (
                  <li class="inline-block">
                    <a
                      href={`/categories/${slugify(category)}`}
                      class="mr-2 hover:text-primary font-medium"
                    >
                      {humanize(category)}{i !== post.data.categories.length - 1 && ","}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          </ul>
        )}
      </Tile>
    ))
  }
</div>
